{"ast":null,"code":"var _jsxFileName = \"/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/src/boardminutes-files/BoardMinutesDocument.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport '../App.css';\nexport default class BoardMinutesDocument extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    var dateString = values.date.toString();\n    var formattedDate = moment(dateString).format(\"LL\");\n    let upper = values.type.toUpperCase(); // var endDateString = values.endDate.toString();\n    // var formattedEndDate = moment(endDateString).format(\"LL\");\n    // var signDateString = values.dateSigned.toString();\n    // var formattedSignDate = moment(signDateString).format(\"LL\");\n    // const cobraCheck = values.cobra === 'Yes'\n    // var cobraRequire = ''\n    // if (cobraCheck)\n    //   cobraRequire = 'Additionally, you will receive a second letter containing information on the Consolidated Omnibus Budget Reconciliation Act (COBRA) continuation of group coverage of your Company provided health benefits.'\n    // let incorp = 'Certificate of Incorporation'\n    // let articles = values.state === 'California' || values.state === 'Massachusetts' || values.state === 'Washington'\n    // let certificate = values.state === 'Delaware' || values.state === 'Texas' || values.state === 'New York'\n    // if (articles) {\n    //   incorp = 'Articles of Incorporation'\n    // }\n    // else if (certificate) {\n    //   incorp = 'Certificate of Incorporation'\n    // }\n    // else {\n    //   incorp = values.docNameOther\n    // }\n\n    let incorp = values.docName;\n    let otherCheck = values.docName === 'Other';\n\n    if (otherCheck) {\n      incorp = values.docNameOther;\n    }\n\n    let unanimousCheck = values.unanimous === 'Yes';\n    let undersigned = 'the directors voting in favor of the resolution(s)';\n\n    if (unanimousCheck) {\n      undersigned = 'all the directors';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"indoc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"MINUTES OF \", upper, \" MEETING \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 56\n      }\n    }), \"OF \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 65\n      }\n    }), \" THE BOARD OF DIRECTORS\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), \" OF \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }\n    }), \" \", values.companyName)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"The \", values.type, \" meeting of the board of directors of \", values.companyName, \" was held on \", formattedDate, \" at \", values.location, \".\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Those present were:\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, values.directors.map((val, idx) => {\n      let nameId = `name-${idx}`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, values.directors[idx]['name'])), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        class: \"tab2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, values.directors[idx]['address'])));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/src/boardminutes-files/BoardMinutesDocument.jsx"],"names":["React","Component","moment","BoardMinutesDocument","constructor","props","render","values","dateString","date","toString","formattedDate","format","upper","type","toUpperCase","incorp","docName","otherCheck","docNameOther","unanimousCheck","unanimous","undersigned","companyName","location","directors","map","val","idx","nameId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport '../App.css';\n\n\nexport default class BoardMinutesDocument extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const { values } = this.props;\n\n    var dateString = values.date.toString();\n    var formattedDate = moment(dateString).format(\"LL\");\n\n    let upper = values.type.toUpperCase();\n    // var endDateString = values.endDate.toString();\n    // var formattedEndDate = moment(endDateString).format(\"LL\");\n\n    // var signDateString = values.dateSigned.toString();\n    // var formattedSignDate = moment(signDateString).format(\"LL\");\n\n    // const cobraCheck = values.cobra === 'Yes'\n    // var cobraRequire = ''\n    // if (cobraCheck)\n    //   cobraRequire = 'Additionally, you will receive a second letter containing information on the Consolidated Omnibus Budget Reconciliation Act (COBRA) continuation of group coverage of your Company provided health benefits.'\n\n    // let incorp = 'Certificate of Incorporation'\n    // let articles = values.state === 'California' || values.state === 'Massachusetts' || values.state === 'Washington'\n    // let certificate = values.state === 'Delaware' || values.state === 'Texas' || values.state === 'New York'\n    // if (articles) {\n    //   incorp = 'Articles of Incorporation'\n    // }\n    // else if (certificate) {\n    //   incorp = 'Certificate of Incorporation'\n    // }\n    // else {\n    //   incorp = values.docNameOther\n    // }\n\n    let incorp = values.docName\n    let otherCheck = values.docName === 'Other'\n    if (otherCheck) {\n      incorp = values.docNameOther\n    }\n\n    let unanimousCheck = values.unanimous === 'Yes'\n    let undersigned = 'the directors voting in favor of the resolution(s)'\n    if (unanimousCheck) {\n      undersigned = 'all the directors'\n    }\n\n    return (\n      <div class='size' >\n        <center>\n          <h5 class='indoc'>MINUTES OF {upper} MEETING <br />OF <br /> THE BOARD OF DIRECTORS\n            <br /> OF <br /> {values.companyName}</h5>\n        </center>\n        <br />\n        <p>The {values.type} meeting of the board of directors of {values.companyName} was held on {formattedDate} at {values.location}.\n        </p>\n        <p>\n          Those present were:\n        </p>\n        <div>\n          {\n            (values.directors).map((val, idx) => {\n              let nameId = `name-${idx}`\n              return (\n                <div key={idx}>\n                  <div class='line'>\n                    <p>{(values.directors)[idx]['name']}</p>\n                  </div>\n                  <div class='line'>\n                    <p class='tab2'>{(values.directors)[idx]['address']}</p>\n                  </div>\n\n                </div>\n\n              )\n            })\n          }\n        </div>\n\n      </div >\n\n    );\n  }\n\n\n}"]},"metadata":{},"sourceType":"module"}