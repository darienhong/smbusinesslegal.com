{"ast":null,"code":"var _jsxFileName = \"/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/src/consulting-files/ConsultingQuestions.jsx\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ConsultingIntro from './ConsultingIntro.jsx';\nimport ConsultingInfo from './ConsultingInfo.jsx';\nimport ConsultingInfo2 from './ConsultingInfo2.jsx';\nimport ConsultingPDF from './ConsultingPDF.jsx';\nimport { Alert } from 'react-alert';\nexport default class Questions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      percent: 50,\n      expenseList: [{\n        name: \"\"\n      }],\n      date: new Date(),\n      employeeName: '[NAME]',\n      address: '[ADDRESS]',\n      consultantName: '[NAME]',\n      companyName: '[COMPANY NAME]',\n      state: '[STATE]',\n      title: '[X]',\n      duties: '[X]',\n      relationship: '[X]',\n      endDate: new Date(),\n      wage: '[X â€“ if paid must comply with minimum wage laws]',\n      hours: '[X]',\n      status: '[Exempt or non-exempt]',\n      atWill: '[X]',\n      expenses: '',\n      liability: '[X]',\n      compete: '[X]',\n      sick: '[X]',\n      employerTitle: '[TITLE]',\n      phone: '[PHONE]',\n      email: '[EMAIL]',\n      paid: '[X]',\n      verification: '[X]',\n      restaurant: '[X]',\n      commission: '[X]',\n      comProcedure: '[X]',\n      tipping: '[X]',\n      registration: '[X]',\n      compensation: '[X]',\n      compSched: '[X]',\n      techConfidential: '[Technical data, trade secrets, know-how, research, product or service ideas or plans, software codes and designs, developments, inventions, laboratory notebooks, processes, formulas, techniques, materials, engineering designs and drawings, configurations, lists of or information or information relating to employees and consultants of the company, any intellectual property developed by the Consultant (as described above).',\n      nontechConfidential: '[X]',\n      insurance: '[X]',\n      other: '[X]'\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.increasePercentage = () => {\n      // this.setState((prevState) => ({\n      //   percent: prevState.percent >= 100 ? 0 : prevState.percent + 25,\n      // }))\n      const {\n        percent\n      } = this.state;\n      this.setState({\n        percent: percent + 25\n      });\n    };\n\n    this.decreasePercentage = () => {\n      this.setState(prevState => ({\n        percent: prevState.percent >= 100 ? 0 : prevState.percent - 25\n      }));\n    };\n\n    this.handleChange = input => event => {\n      this.setState({\n        [input]: event.target.value\n      });\n    };\n\n    this.handleExpenseChange = e => {\n      let expenseList = [...this.state.expenseList];\n      expenseList[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({\n        expenseList\n      }, () => console.log(this.state.expenseList));\n    };\n\n    this.addExpense = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        expenseList: [...prevState.expenseList, {\n          name: \"\"\n        }]\n      }));\n    };\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      date,\n      employeeName,\n      address,\n      consultantName,\n      companyName,\n      state,\n      title,\n      duties,\n      relationship,\n      endDate,\n      wage,\n      hours,\n      status,\n      atWill,\n      credits,\n      expenses,\n      liability,\n      compete,\n      percent,\n      sick,\n      employerTitle,\n      phone,\n      email,\n      paid,\n      verification,\n      expenseList,\n      restaurant,\n      commission,\n      tipping,\n      comProcedure,\n      registration,\n      compensation,\n      compSched,\n      techConfidential,\n      nontechConfidential,\n      insurance,\n      other\n    } = this.state;\n    const values = {\n      date,\n      employeeName,\n      address,\n      consultantName,\n      companyName,\n      state,\n      title,\n      duties,\n      relationship,\n      endDate,\n      wage,\n      hours,\n      status,\n      atWill,\n      credits,\n      expenses,\n      liability,\n      compete,\n      percent,\n      sick,\n      employerTitle,\n      phone,\n      email,\n      paid,\n      verification,\n      expenseList,\n      restaurant,\n      commission,\n      tipping,\n      comProcedure,\n      registration,\n      compensation,\n      compSched,\n      techConfidential,\n      nontechConfidential,\n      insurance,\n      other\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/React.createElement(ConsultingIntro, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values // doc={EmploymentDocument}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(ConsultingInfo, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          handleExpenseChange: this.handleExpenseChange,\n          addExpense: this.addExpense,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 16\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(ConsultingInfo2, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 16\n          }\n        });\n      // case 4:\n      //   return <EmploymentInfo2\n      //     nextStep={this.nextStep}\n      //     prevStep={this.prevStep}\n      //     handleChange={this.handleChange}\n      //     handleExpenseChange={this.handleExpenseChange}\n      //     addExpense={this.addExpense}\n      //     // handleExpenses={this.handleExpenses}\n      //     increasePercentage={this.increasePercentage}\n      //     decreasePercentage={this.decreasePercentage}\n      //     values={values}\n      //   />\n      // case 5:\n      //   return <InternshipEmployer\n      //     nextStep={this.nextStep}\n      //     prevStep={this.prevStep}\n      //     handleChange={this.handleChange}\n      //     increasePercentage={this.increasePercentage}\n      //     decreasePercentage={this.decreasePercentage}\n      //     values={values}\n      //   />\n\n      case 4:\n        return /*#__PURE__*/React.createElement(ConsultingPDF, {\n          prevStep: this.prevStep,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/src/consulting-files/ConsultingQuestions.jsx"],"names":["React","Component","ConsultingIntro","ConsultingInfo","ConsultingInfo2","ConsultingPDF","Alert","Questions","state","step","percent","expenseList","name","date","Date","employeeName","address","consultantName","companyName","title","duties","relationship","endDate","wage","hours","status","atWill","expenses","liability","compete","sick","employerTitle","phone","email","paid","verification","restaurant","commission","comProcedure","tipping","registration","compensation","compSched","techConfidential","nontechConfidential","insurance","other","nextStep","setState","prevStep","increasePercentage","decreasePercentage","prevState","handleChange","input","event","target","value","handleExpenseChange","e","dataset","id","className","console","log","addExpense","preventDefault","render","credits","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ConsultingIntro from './ConsultingIntro.jsx';\nimport ConsultingInfo from './ConsultingInfo.jsx';\nimport ConsultingInfo2 from './ConsultingInfo2.jsx';\nimport ConsultingPDF from './ConsultingPDF.jsx';\n\n\nimport { Alert } from 'react-alert'\n\n\nexport default class Questions extends Component {\n  state = {\n    step: 1,\n    percent: 50,\n    expenseList: [{ name: \"\" }],\n    date: new Date(),\n    employeeName: '[NAME]',\n    address: '[ADDRESS]',\n    consultantName: '[NAME]',\n    companyName: '[COMPANY NAME]',\n    state: '[STATE]',\n    title: '[X]',\n    duties: '[X]',\n    relationship: '[X]',\n    endDate: new Date(),\n    wage: '[X â€“ if paid must comply with minimum wage laws]',\n    hours: '[X]',\n    status: '[Exempt or non-exempt]',\n    atWill: '[X]',\n    expenses: '',\n    liability: '[X]',\n    compete: '[X]',\n    sick: '[X]',\n    employerTitle: '[TITLE]',\n    phone: '[PHONE]',\n    email: '[EMAIL]',\n    paid: '[X]',\n    verification: '[X]',\n    restaurant: '[X]',\n    commission: '[X]',\n    comProcedure: '[X]',\n    tipping: '[X]',\n    registration: '[X]',\n    compensation: '[X]',\n    compSched: '[X]',\n    techConfidential: '[Technical data, trade secrets, know-how, research, product or service ideas or plans, software codes and designs, developments, inventions, laboratory notebooks, processes, formulas, techniques, materials, engineering designs and drawings, configurations, lists of or information or information relating to employees and consultants of the company, any intellectual property developed by the Consultant (as described above).',\n    nontechConfidential: '[X]',\n    insurance: '[X]',\n    other: '[X]'\n  }\n\n  nextStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step + 1\n    })\n  }\n\n  prevStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step - 1\n    })\n  }\n\n  increasePercentage = () => {\n    // this.setState((prevState) => ({\n    //   percent: prevState.percent >= 100 ? 0 : prevState.percent + 25,\n    // }))\n    const { percent } = this.state\n    this.setState({\n      percent: percent + 25\n    })\n  }\n\n\n  decreasePercentage = () => {\n    this.setState((prevState) => ({\n      percent: prevState.percent >= 100 ? 0 : prevState.percent - 25,\n    }))\n  }\n\n\n  handleChange = input => event => {\n    this.setState({ [input]: event.target.value })\n  }\n\n  handleExpenseChange = (e) => {\n    let expenseList = [...this.state.expenseList]\n    expenseList[e.target.dataset.id][e.target.className] = e.target.value\n    this.setState({ expenseList }, () => console.log(this.state.expenseList))\n  }\n\n  addExpense = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      expenseList: [...prevState.expenseList, { name: \"\" }],\n    }));\n  }\n\n  render() {\n    const { step } = this.state;\n    const { date, employeeName, address, consultantName, companyName, state, title, duties, relationship, endDate,\n      wage, hours, status, atWill, credits, expenses, liability, compete, percent, sick,\n      employerTitle, phone, email, paid, verification, expenseList, restaurant, commission,\n      tipping, comProcedure, registration, compensation, compSched,\n      techConfidential, nontechConfidential, insurance, other\n    } = this.state;\n    const values = {\n      date, employeeName, address, consultantName, companyName, state, title, duties, relationship, endDate,\n      wage, hours, status, atWill, credits, expenses, liability, compete, percent, sick, employerTitle,\n      phone, email, paid, verification, expenseList, restaurant, commission,\n      tipping, comProcedure, registration, compensation, compSched,\n      techConfidential, nontechConfidential, insurance, other\n    };\n\n    switch (step) {\n      case 1:\n        return <ConsultingIntro\n          nextStep={this.nextStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        // doc={EmploymentDocument}\n        />\n\n      case 2:\n        return <ConsultingInfo\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n          handleExpenseChange={this.handleExpenseChange}\n          addExpense={this.addExpense}\n\n        />\n      case 3:\n        return <ConsultingInfo2\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        />\n      // case 4:\n      //   return <EmploymentInfo2\n      //     nextStep={this.nextStep}\n      //     prevStep={this.prevStep}\n      //     handleChange={this.handleChange}\n      //     handleExpenseChange={this.handleExpenseChange}\n      //     addExpense={this.addExpense}\n      //     // handleExpenses={this.handleExpenses}\n      //     increasePercentage={this.increasePercentage}\n      //     decreasePercentage={this.decreasePercentage}\n      //     values={values}\n      //   />\n      // case 5:\n      //   return <InternshipEmployer\n      //     nextStep={this.nextStep}\n      //     prevStep={this.prevStep}\n      //     handleChange={this.handleChange}\n      //     increasePercentage={this.increasePercentage}\n      //     decreasePercentage={this.decreasePercentage}\n      //     values={values}\n      //   />\n      case 4:\n        return <ConsultingPDF\n          prevStep={this.prevStep}\n          values={values} />\n    }\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}