{"ast":null,"code":"var _jsxFileName = \"/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/src/employment-files/EmploymentQuestions.jsx\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmploymentDocument from './EmploymentDocument.jsx';\nimport LetterIntro from '../internship-files/LetterIntro.jsx';\nimport InternshipInfo from '../internship-files/InternshipInfo.jsx';\nimport EmploymentInfo from './EmploymentInfo.jsx';\nimport EmploymentInfo2 from './EmploymentInfo2.jsx';\nimport InternshipEmployer from '../internship-files/InternshipEmployer.jsx';\nimport PDF from '../internship-files/PDF.jsx';\nimport { Alert } from 'react-alert';\nexport default class EmploymentQuestions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      percent: 50,\n      expenseList: [{\n        name: \"\"\n      }],\n      date: new Date(),\n      employeeName: '[NAME]',\n      address: '[ADDRESS]',\n      internName: '[NAME]',\n      companyName: '[COMPANY NAME]',\n      state: '[STATE]',\n      title: '[X]',\n      duties: '[X]',\n      relationship: '[X]',\n      startDate: new Date(),\n      wage: '[X â€“ if paid must comply with minimum wage laws]',\n      hours: '[X]',\n      status: '[Exempt or non-exempt]',\n      atWill: '[X]',\n      expenses: '',\n      liability: '[X]',\n      compete: '[X]',\n      sick: '[X]',\n      employerTitle: '[TITLE]',\n      phone: '[PHONE]',\n      email: '[EMAIL]',\n      paid: '[X]',\n      verification: '[X]',\n      restaurant: '[X]',\n      commission: '[X]',\n      comProcedure: '[X]',\n      tipping: '[X]'\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.increasePercentage = () => {\n      // this.setState((prevState) => ({\n      //   percent: prevState.percent >= 100 ? 0 : prevState.percent + 25,\n      // }))\n      const {\n        percent\n      } = this.state;\n      this.setState({\n        percent: percent + 25\n      });\n    };\n\n    this.decreasePercentage = () => {\n      this.setState(prevState => ({\n        percent: prevState.percent >= 100 ? 0 : prevState.percent - 25\n      }));\n    };\n\n    this.handleChange = input => event => {\n      this.setState({\n        [input]: event.target.value\n      });\n    };\n\n    this.handleExpenseChange = e => {\n      let expenseList = [...this.state.expenseList];\n      expenseList[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({\n        expenseList\n      }, () => console.log(this.state.expenseList));\n    };\n\n    this.addExpense = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        expenseList: [...prevState.expenseList, {\n          name: \"\"\n        }]\n      }));\n    };\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      date,\n      employeeName,\n      address,\n      internName,\n      companyName,\n      state,\n      title,\n      duties,\n      relationship,\n      startDate,\n      wage,\n      hours,\n      status,\n      atWill,\n      credits,\n      expenses,\n      liability,\n      compete,\n      percent,\n      sick,\n      employerTitle,\n      phone,\n      email,\n      paid,\n      verification,\n      expenseList,\n      restaurant,\n      commission,\n      tipping,\n      comProcedure\n    } = this.state;\n    const values = {\n      date,\n      employeeName,\n      address,\n      internName,\n      companyName,\n      state,\n      title,\n      duties,\n      relationship,\n      startDate,\n      wage,\n      hours,\n      status,\n      atWill,\n      credits,\n      expenses,\n      liability,\n      compete,\n      percent,\n      sick,\n      employerTitle,\n      phone,\n      email,\n      paid,\n      verification,\n      expenseList,\n      restaurant,\n      commission,\n      tipping,\n      comProcedure\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/React.createElement(LetterIntro, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values // doc={EmploymentDocument}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(InternshipInfo, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 16\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(EmploymentInfo, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 16\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(EmploymentInfo2, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          handleExpenseChange: this.handleExpenseChange,\n          addExpense: this.addExpense // handleExpenses={this.handleExpenses}\n          ,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 16\n          }\n        });\n\n      case 5:\n        return /*#__PURE__*/React.createElement(InternshipEmployer, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 16\n          }\n        });\n\n      case 6:\n        return /*#__PURE__*/React.createElement(PDF, {\n          prevStep: this.prevStep,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/src/employment-files/EmploymentQuestions.jsx"],"names":["React","Component","EmploymentDocument","LetterIntro","InternshipInfo","EmploymentInfo","EmploymentInfo2","InternshipEmployer","PDF","Alert","EmploymentQuestions","state","step","percent","expenseList","name","date","Date","employeeName","address","internName","companyName","title","duties","relationship","startDate","wage","hours","status","atWill","expenses","liability","compete","sick","employerTitle","phone","email","paid","verification","restaurant","commission","comProcedure","tipping","nextStep","setState","prevStep","increasePercentage","decreasePercentage","prevState","handleChange","input","event","target","value","handleExpenseChange","e","dataset","id","className","console","log","addExpense","preventDefault","render","credits","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmploymentDocument from './EmploymentDocument.jsx';\nimport LetterIntro from '../internship-files/LetterIntro.jsx';\nimport InternshipInfo from '../internship-files/InternshipInfo.jsx';\nimport EmploymentInfo from './EmploymentInfo.jsx';\nimport EmploymentInfo2 from './EmploymentInfo2.jsx';\nimport InternshipEmployer from '../internship-files/InternshipEmployer.jsx';\nimport PDF from '../internship-files/PDF.jsx';\n\n\nimport { Alert } from 'react-alert'\n\n\nexport default class EmploymentQuestions extends Component {\n  state = {\n    step: 1,\n    percent: 50,\n    expenseList: [{ name: \"\" }],\n    date: new Date(),\n    employeeName: '[NAME]',\n    address: '[ADDRESS]',\n    internName: '[NAME]',\n    companyName: '[COMPANY NAME]',\n    state: '[STATE]',\n    title: '[X]',\n    duties: '[X]',\n    relationship: '[X]',\n    startDate: new Date(),\n    wage: '[X â€“ if paid must comply with minimum wage laws]',\n    hours: '[X]',\n    status: '[Exempt or non-exempt]',\n    atWill: '[X]',\n    expenses: '',\n    liability: '[X]',\n    compete: '[X]',\n    sick: '[X]',\n    employerTitle: '[TITLE]',\n    phone: '[PHONE]',\n    email: '[EMAIL]',\n    paid: '[X]',\n    verification: '[X]',\n    restaurant: '[X]',\n    commission: '[X]',\n    comProcedure: '[X]',\n    tipping: '[X]'\n  }\n\n  nextStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step + 1\n    })\n  }\n\n  prevStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step - 1\n    })\n  }\n\n  increasePercentage = () => {\n    // this.setState((prevState) => ({\n    //   percent: prevState.percent >= 100 ? 0 : prevState.percent + 25,\n    // }))\n    const { percent } = this.state\n    this.setState({\n      percent: percent + 25\n    })\n  }\n\n\n  decreasePercentage = () => {\n    this.setState((prevState) => ({\n      percent: prevState.percent >= 100 ? 0 : prevState.percent - 25,\n    }))\n  }\n\n\n  handleChange = input => event => {\n    this.setState({ [input]: event.target.value })\n  }\n\n  handleExpenseChange = (e) => {\n    let expenseList = [...this.state.expenseList]\n    expenseList[e.target.dataset.id][e.target.className] = e.target.value\n    this.setState({ expenseList }, () => console.log(this.state.expenseList))\n  }\n\n  addExpense = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      expenseList: [...prevState.expenseList, { name: \"\" }],\n    }));\n  }\n\n  render() {\n    const { step } = this.state;\n    const { date, employeeName, address, internName, companyName, state, title, duties, relationship, startDate,\n      wage, hours, status, atWill, credits, expenses, liability, compete, percent, sick,\n      employerTitle, phone, email, paid, verification, expenseList, restaurant, commission, tipping, comProcedure,\n    } = this.state;\n    const values = {\n      date, employeeName, address, internName, companyName, state, title, duties, relationship, startDate,\n      wage, hours, status, atWill, credits, expenses, liability, compete, percent, sick, employerTitle,\n      phone, email, paid, verification, expenseList, restaurant, commission, tipping, comProcedure\n    };\n\n    switch (step) {\n      case 1:\n        return <LetterIntro\n          nextStep={this.nextStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        // doc={EmploymentDocument}\n        />\n\n      case 2:\n        return <InternshipInfo\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        />\n      case 3:\n        return <EmploymentInfo\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        />\n      case 4:\n        return <EmploymentInfo2\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          handleExpenseChange={this.handleExpenseChange}\n          addExpense={this.addExpense}\n          // handleExpenses={this.handleExpenses}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        />\n      case 5:\n        return <InternshipEmployer\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        />\n      case 6:\n        return <PDF\n          prevStep={this.prevStep}\n          values={values} />\n    }\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}