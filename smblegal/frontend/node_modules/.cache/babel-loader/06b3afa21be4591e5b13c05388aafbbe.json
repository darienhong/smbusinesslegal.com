{"ast":null,"code":"var _jsxFileName = \"/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/src/waiverdirectors-files/WaiverDirectorsDocument.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport '../App.css';\nexport default class WaiverDirectorsDocument extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    var dateString = values.date.toString();\n    var formattedDate = moment(dateString).format(\"LL\"); // let unanimousCheck = values.unanimous === 'Yes'\n    // let undersigned = 'the directors voting in favor of the resolution(s)'\n    // if (unanimousCheck) {\n    //   undersigned = 'all the directors'\n    // }\n    // let numberCheck = values.number === 'Multiple'\n    // let title = 'SOLE SHAREHOLDER'\n    // let para = 'ALL'\n    // let share = 'shareholder'\n    // if (numberCheck) {\n    //   title = 'SHAREHOLDERS'\n    //   para = 'A QUORUM'\n    //   share = 'shareholders'\n    //   if (unanimousCheck) {\n    //     para = 'ALL'\n    //   }\n    // }\n    // let upperShare = share.toUpperCase()\n    // var endDateString = values.endDate.toString();\n    // var formattedEndDate = moment(endDateString).format(\"LL\");\n    // var signDateString = values.dateSigned.toString();\n    // var formattedSignDate = moment(signDateString).format(\"LL\");\n    // const cobraCheck = values.cobra === 'Yes'\n    // var cobraRequire = ''\n    // if (cobraCheck)\n    //   cobraRequire = 'Additionally, you will receive a second letter containing information on the Consolidated Omnibus Budget Reconciliation Act (COBRA) continuation of group coverage of your Company provided health benefits.'\n    // let condCheck = values.confidential === ''\n    // let cond = ''\n    // if (condCheck) {\n    //   cond = 'Confidential Information includes, but is not limited to information pertaining' +\n    //     'to products, technical information, formula, specifications, designs, processes, ' +\n    //     'plans, policies, procedures, employees, work conditions, legal and regulatory ' +\n    //     'affairs, assets, inventory, discoveries, trademarks, parents, manufacturing, ' +\n    //     'packaging, distribution, sales, marketing, expenses, financial statements and ' +\n    //     'data, customer and supplier lists, raw materials, costs of goods and relationships ' +\n    //     'with third parties, know - how, techniques, inventions, software programs, ' +\n    //     'algorithms, software source documents, future and proposed product releases, ' +\n    //     'pricing, margins, merchandising plans and strategies, customer lists, and trade ' +\n    //     'secrets.Additional Confidential Information are notes, analysis, compilations or ' +\n    //     'studies or documents prepared by either Party which contain or were based on ' +\n    //     'Confidential Information.'\n    // }\n    // else {\n    //   cond = values.confidential\n    // }\n    // let condUseCheck = values.confidentialUseCheck === 'Yes'\n    // let condUse = ''\n    // if (condUseCheck) {\n    //   condUse = ' or ' + values.confidentialUse\n    // }\n\n    let typeUpper = values.type.toUpperCase();\n    var misc = 'Miscellaneous';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"indoc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"WAIVER OF NOTICE OF \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 49\n      }\n    }), \" \", typeUpper, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 69\n      }\n    }), \" MEETING OF THE BOARD OF DIRECTORS OF \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 113\n      }\n    }), values.companyName, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 34\n      }\n    }), \" A \", values.state, \" CORPORATION\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, values.name, \", the undersigned and director of \", values.companyName, \", does hereby waive any required notice of the \", typeUpper, \" meeting of the board of directors of the company, and consents to the holding of the meeting that is scheduled to be held on \", formattedDate, \".\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, values.name, \" consents to the holding of the meeting and the transaction of business at the meeting. \", values.name, \" further requests that the secretary file this waiver with the minutes in the corporate records.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Approved and made effective this ________ day of __________ 20_____\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, values.signerList.map((val, idx) => {\n      let signerId = `signer-${idx}`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, values.signerList[idx]['name']), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, \"__________________________________\"));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/src/waiverdirectors-files/WaiverDirectorsDocument.jsx"],"names":["React","Component","moment","WaiverDirectorsDocument","constructor","props","render","values","dateString","date","toString","formattedDate","format","typeUpper","type","toUpperCase","misc","companyName","state","name","signerList","map","val","idx","signerId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,YAAP;AAGA,eAAe,MAAMC,uBAAN,SAAsCF,SAAtC,CAAgD;AAC7DG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AAEA,QAAIG,UAAU,GAAGD,MAAM,CAACE,IAAP,CAAYC,QAAZ,EAAjB;AACA,QAAIC,aAAa,GAAGT,MAAM,CAACM,UAAD,CAAN,CAAmBI,MAAnB,CAA0B,IAA1B,CAApB,CAJO,CAMP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAIC,SAAS,GAAGN,MAAM,CAACO,IAAP,CAAYC,WAAZ,EAAhB;AACA,QAAIC,IAAI,GAAG,eAAX;AACA,wBACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,OAA8CH,SAA9C,qBAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1D,yDAAsG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtG,EACGN,MAAM,CAACU,WADV,oBACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvB,SACiCV,MAAM,CAACW,KADxC,iBADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIX,MAAM,CAACY,IAAX,wCAAmDZ,MAAM,CAACU,WAA1D,qDACKJ,SADL,oIAE+DF,aAF/D,MANF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,MAAM,CAACY,IADV,8FAEYZ,MAAM,CAACY,IAFnB,qGAVF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAfF,eAkBE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKZ,MAAM,CAACa,UAAR,CAAoBC,GAApB,CAAwB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpC,UAAIC,QAAQ,GAAI,UAASD,GAAI,EAA7B;AACA,0BACE;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKhB,MAAM,CAACa,UAAR,CAAoBG,GAApB,EAAyB,MAAzB,CAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFF,CADF;AAOD,KATD,CAFJ,CAlBF,CADF;AAqCD;;AA1G4D","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport '../App.css';\n\n\nexport default class WaiverDirectorsDocument extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const { values } = this.props;\n\n    var dateString = values.date.toString();\n    var formattedDate = moment(dateString).format(\"LL\");\n\n    // let unanimousCheck = values.unanimous === 'Yes'\n    // let undersigned = 'the directors voting in favor of the resolution(s)'\n    // if (unanimousCheck) {\n    //   undersigned = 'all the directors'\n    // }\n\n    // let numberCheck = values.number === 'Multiple'\n    // let title = 'SOLE SHAREHOLDER'\n    // let para = 'ALL'\n    // let share = 'shareholder'\n    // if (numberCheck) {\n    //   title = 'SHAREHOLDERS'\n    //   para = 'A QUORUM'\n    //   share = 'shareholders'\n    //   if (unanimousCheck) {\n    //     para = 'ALL'\n    //   }\n    // }\n    // let upperShare = share.toUpperCase()\n\n    // var endDateString = values.endDate.toString();\n    // var formattedEndDate = moment(endDateString).format(\"LL\");\n\n    // var signDateString = values.dateSigned.toString();\n    // var formattedSignDate = moment(signDateString).format(\"LL\");\n\n    // const cobraCheck = values.cobra === 'Yes'\n    // var cobraRequire = ''\n    // if (cobraCheck)\n    //   cobraRequire = 'Additionally, you will receive a second letter containing information on the Consolidated Omnibus Budget Reconciliation Act (COBRA) continuation of group coverage of your Company provided health benefits.'\n\n    // let condCheck = values.confidential === ''\n    // let cond = ''\n    // if (condCheck) {\n    //   cond = 'Confidential Information includes, but is not limited to information pertaining' +\n    //     'to products, technical information, formula, specifications, designs, processes, ' +\n    //     'plans, policies, procedures, employees, work conditions, legal and regulatory ' +\n    //     'affairs, assets, inventory, discoveries, trademarks, parents, manufacturing, ' +\n    //     'packaging, distribution, sales, marketing, expenses, financial statements and ' +\n    //     'data, customer and supplier lists, raw materials, costs of goods and relationships ' +\n    //     'with third parties, know - how, techniques, inventions, software programs, ' +\n    //     'algorithms, software source documents, future and proposed product releases, ' +\n    //     'pricing, margins, merchandising plans and strategies, customer lists, and trade ' +\n    //     'secrets.Additional Confidential Information are notes, analysis, compilations or ' +\n    //     'studies or documents prepared by either Party which contain or were based on ' +\n    //     'Confidential Information.'\n    // }\n    // else {\n    //   cond = values.confidential\n    // }\n\n    // let condUseCheck = values.confidentialUseCheck === 'Yes'\n    // let condUse = ''\n    // if (condUseCheck) {\n    //   condUse = ' or ' + values.confidentialUse\n    // }\n\n    let typeUpper = values.type.toUpperCase()\n    var misc = 'Miscellaneous'\n    return (\n      <div class='size' >\n        <center>\n          <h5 class='indoc'>WAIVER OF NOTICE OF <br /> {typeUpper}  <br /> MEETING OF THE BOARD OF DIRECTORS OF <br />\n            {values.companyName} <br /> A {values.state} CORPORATION</h5>\n          <br />\n        </center>\n        <p>{values.name}, the undersigned and director of {values.companyName}, does hereby waive any required notice of\n        the {typeUpper} meeting of the board of directors of the company, and consents\n        to the holding of the meeting that is scheduled to be held on {formattedDate}.\n        </p>\n        <p>\n          {values.name} consents to the holding of the meeting and the transaction of business at the\n          meeting. {values.name} further requests that the secretary file this waiver with the minutes in the\n          corporate records.\n        </p>\n        <p>\n          Approved and made effective this ________ day of __________ 20_____\n        </p>\n        <div class='tab'>\n          {\n            (values.signerList).map((val, idx) => {\n              let signerId = `signer-${idx}`\n              return (\n                <div key={idx}>\n                  <p>{(values.signerList)[idx]['name']}</p>\n                  <p>__________________________________</p>\n                </div>\n\n              )\n            })\n          }\n        </div>\n\n      </div >\n\n    );\n  }\n\n\n}"]},"metadata":{},"sourceType":"module"}