{"ast":null,"code":"var _jsxFileName = \"/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/frontend/src/consulting-files/ConsultingQuestions.jsx\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ConsultingIntro from './ConsultingIntro.jsx';\nimport ConsultingInfo from './ConsultingInfo.jsx';\nimport ConsultingInfo2 from './ConsultingInfo2.jsx';\nimport ConsultingInfo3 from './ConsultingInfo3';\nimport ConsultingPDF from './ConsultingPDF.jsx';\nimport { Alert } from 'react-alert';\nexport default class ConsultingQuestions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      percent: 50,\n      expenseList: [{\n        name: \"\"\n      }],\n      date: new Date(),\n      employeeName: '[NAME]',\n      consultantName: '[NAME]',\n      companyName: '[COMPANY NAME]',\n      state: '[STATE]',\n      endDate: new Date(),\n      wage: '[X â€“ if paid must comply with minimum wage laws]',\n      hours: '[X]',\n      expenses: '',\n      liability: '[X]',\n      registration: '[X]',\n      compensation: '[X]',\n      compSched: '[X]',\n      techConfidential: 'Technical data, trade secrets, know-how, research, product or service ideas or plans, software codes and designs, developments, inventions, laboratory notebooks, processes, formulas, techniques, materials, engineering designs and drawings, configurations, lists of or information or information relating to employees and consultants of the company, any intellectual property developed by the Consultant (as described above).',\n      nontechConfidential: 'Non-technical information relating to products, pricing, price lists, margins, market-share data, merchandising plans and strategies, finances, financial accounting data and information, suppliers, customers, customer lists, purchasing data, sales and marketing plans, current or future business plans.',\n      insurance: '[X]',\n      other: '[X]',\n      scope: '[X]',\n      term: '[X]',\n      supervision: '[X]',\n      secrets: '[X]',\n      type: '[LLC]',\n      docs_used: localStorage.getItem('docs_used')\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.increasePercentage = () => {\n      // this.setState((prevState) => ({\n      //   percent: prevState.percent >= 100 ? 0 : prevState.percent + 25,\n      // }))\n      const {\n        percent\n      } = this.state;\n      this.setState({\n        percent: percent + 25\n      });\n    };\n\n    this.decreasePercentage = () => {\n      this.setState(prevState => ({\n        percent: prevState.percent >= 100 ? 0 : prevState.percent - 25\n      }));\n    };\n\n    this.handleChange = input => event => {\n      this.setState({\n        [input]: event.target.value\n      });\n    };\n\n    this.handleExpenseChange = e => {\n      let expenseList = [...this.state.expenseList];\n      expenseList[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({\n        expenseList\n      }, () => console.log(this.state.expenseList));\n    };\n\n    this.addExpense = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        expenseList: [...prevState.expenseList, {\n          name: \"\"\n        }]\n      }));\n    };\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      date,\n      employeeName,\n      consultantName,\n      companyName,\n      state,\n      endDate,\n      wage,\n      hours,\n      expenses,\n      liability,\n      percent,\n      expenseList,\n      registration,\n      compensation,\n      compSched,\n      techConfidential,\n      nontechConfidential,\n      insurance,\n      other,\n      scope,\n      term,\n      supervision,\n      secrets,\n      type,\n      docs_used\n    } = this.state;\n    const values = {\n      date,\n      employeeName,\n      consultantName,\n      companyName,\n      state,\n      endDate,\n      wage,\n      hours,\n      expenses,\n      liability,\n      percent,\n      expenseList,\n      registration,\n      compensation,\n      compSched,\n      techConfidential,\n      nontechConfidential,\n      insurance,\n      other,\n      scope,\n      term,\n      supervision,\n      secrets,\n      type\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/React.createElement(ConsultingIntro, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values // doc={EmploymentDocument}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(ConsultingInfo, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          handleExpenseChange: this.handleExpenseChange,\n          addExpense: this.addExpense,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 16\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(ConsultingInfo2, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 16\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(ConsultingInfo3, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 16\n          }\n        });\n\n      case 5:\n        return /*#__PURE__*/React.createElement(ConsultingPDF, {\n          prevStep: this.prevStep,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/frontend/src/consulting-files/ConsultingQuestions.jsx"],"names":["React","Component","ConsultingIntro","ConsultingInfo","ConsultingInfo2","ConsultingInfo3","ConsultingPDF","Alert","ConsultingQuestions","state","step","percent","expenseList","name","date","Date","employeeName","consultantName","companyName","endDate","wage","hours","expenses","liability","registration","compensation","compSched","techConfidential","nontechConfidential","insurance","other","scope","term","supervision","secrets","type","docs_used","localStorage","getItem","nextStep","setState","prevStep","increasePercentage","decreasePercentage","prevState","handleChange","input","event","target","value","handleExpenseChange","e","dataset","id","className","console","log","addExpense","preventDefault","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ConsultingIntro from './ConsultingIntro.jsx';\n\nimport ConsultingInfo from './ConsultingInfo.jsx';\nimport ConsultingInfo2 from './ConsultingInfo2.jsx';\nimport ConsultingInfo3 from './ConsultingInfo3';\nimport ConsultingPDF from './ConsultingPDF.jsx';\n\n\nimport { Alert } from 'react-alert'\n\n\nexport default class ConsultingQuestions extends Component {\n  state = {\n    step: 1,\n    percent: 50,\n    expenseList: [{ name: \"\" }],\n    date: new Date(),\n    employeeName: '[NAME]',\n    consultantName: '[NAME]',\n    companyName: '[COMPANY NAME]',\n    state: '[STATE]',\n    endDate: new Date(),\n    wage: '[X â€“ if paid must comply with minimum wage laws]',\n    hours: '[X]',\n    expenses: '',\n    liability: '[X]',\n    registration: '[X]',\n    compensation: '[X]',\n    compSched: '[X]',\n    techConfidential: 'Technical data, trade secrets, know-how, research, product or service ideas or plans, software codes and designs, developments, inventions, laboratory notebooks, processes, formulas, techniques, materials, engineering designs and drawings, configurations, lists of or information or information relating to employees and consultants of the company, any intellectual property developed by the Consultant (as described above).',\n    nontechConfidential: 'Non-technical information relating to products, pricing, price lists, margins, market-share data, merchandising plans and strategies, finances, financial accounting data and information, suppliers, customers, customer lists, purchasing data, sales and marketing plans, current or future business plans.',\n    insurance: '[X]',\n    other: '[X]',\n    scope: '[X]',\n    term: '[X]',\n    supervision: '[X]',\n    secrets: '[X]',\n    type: '[LLC]',\n    docs_used: localStorage.getItem('docs_used'),\n  }\n\n  nextStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step + 1\n    })\n  }\n\n  prevStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step - 1\n    })\n  }\n\n  increasePercentage = () => {\n    // this.setState((prevState) => ({\n    //   percent: prevState.percent >= 100 ? 0 : prevState.percent + 25,\n    // }))\n    const { percent } = this.state\n    this.setState({\n      percent: percent + 25\n    })\n  }\n\n\n  decreasePercentage = () => {\n    this.setState((prevState) => ({\n      percent: prevState.percent >= 100 ? 0 : prevState.percent - 25,\n    }))\n  }\n\n\n  handleChange = input => event => {\n    this.setState({ [input]: event.target.value })\n  }\n\n  handleExpenseChange = (e) => {\n    let expenseList = [...this.state.expenseList]\n    expenseList[e.target.dataset.id][e.target.className] = e.target.value\n    this.setState({ expenseList }, () => console.log(this.state.expenseList))\n  }\n\n  addExpense = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      expenseList: [...prevState.expenseList, { name: \"\" }],\n    }));\n  }\n\n  render() {\n    const { step } = this.state;\n    const { date, employeeName, consultantName, companyName, state, endDate,\n      wage, hours, expenses, liability, percent,\n      expenseList, registration, compensation, compSched,\n      techConfidential, nontechConfidential, insurance, other, scope, term, supervision, secrets, type, docs_used\n    } = this.state;\n    const values = {\n      date, employeeName, consultantName, companyName, state, endDate,\n      wage, hours, expenses, liability, percent, expenseList, registration, compensation, compSched,\n      techConfidential, nontechConfidential, insurance, other, scope, term, supervision, secrets, type\n    };\n\n    switch (step) {\n      case 1:\n        return <ConsultingIntro\n          nextStep={this.nextStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        // doc={EmploymentDocument}\n        />\n\n      case 2:\n        return <ConsultingInfo\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n          handleExpenseChange={this.handleExpenseChange}\n          addExpense={this.addExpense}\n\n        />\n      case 3:\n        return <ConsultingInfo2\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        />\n      case 4:\n        return <ConsultingInfo3\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        />\n      case 5:\n        return <ConsultingPDF\n          prevStep={this.prevStep}\n          values={values} />\n    }\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}