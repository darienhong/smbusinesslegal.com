{"ast":null,"code":"var _jsxFileName = \"/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/frontend/src/formation-files/FormationQuestions.jsx\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FormationIntro from './FormationIntro.jsx';\nimport FormationInfo from './FormationInfo.jsx';\nimport FormationPDF from './FormationPDF.jsx';\nimport { Alert } from 'react-alert';\nexport default class FormationQuestions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      percent: 50,\n      date: new Date(),\n      companyName: '[X]',\n      name: '[X]',\n      address: '[X]',\n      phone: '[X]',\n      fax: '[X]',\n      companyAddress: '[X]',\n      companyCity: '[X]',\n      companyCounty: '[X]',\n      companyZip: '[X]',\n      incorpList: [{\n        name: \"\"\n      }]\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.increasePercentage = () => {\n      // this.setState((prevState) => ({\n      //   percent: prevState.percent >= 100 ? 0 : prevState.percent + 25,\n      // }))\n      const {\n        percent\n      } = this.state;\n      this.setState({\n        percent: percent + 25\n      });\n    };\n\n    this.decreasePercentage = () => {\n      this.setState(prevState => ({\n        percent: prevState.percent >= 100 ? 0 : prevState.percent - 25\n      }));\n    };\n\n    this.handleChange = input => event => {\n      this.setState({\n        [input]: event.target.value\n      });\n    };\n\n    this.handleIncorpChange = e => {\n      let incorpList = [...this.state.incorpList];\n      incorpList[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({\n        incorpList\n      }, () => console.log(this.state.incorpList));\n    };\n\n    this.addIncorp = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        incorpList: [...prevState.incorpList, {\n          name: \"\"\n        }]\n      }));\n    };\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      percent,\n      date,\n      companyName,\n      name,\n      address,\n      phone,\n      fax,\n      companyAddress,\n      companyCity,\n      companyCounty,\n      companyZip,\n      incorpList\n    } = this.state;\n    const values = {\n      percent,\n      date,\n      companyName,\n      name,\n      address,\n      phone,\n      fax,\n      companyAddress,\n      companyCity,\n      companyCounty,\n      companyZip,\n      incorpList\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/React.createElement(FormationIntro, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values // doc={EmploymentDocument}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(FormationInfo, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          increasePercentage: this.increasePercentage,\n          decreasePercentage: this.decreasePercentage,\n          values: values // doc={EmploymentDocument}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 16\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(FormationPDF, {\n          prevStep: this.prevStep,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/frontend/src/formation-files/FormationQuestions.jsx"],"names":["React","Component","ArrowBackIosIcon","FormationIntro","FormationInfo","FormationPDF","Alert","FormationQuestions","state","step","percent","date","Date","companyName","name","address","phone","fax","companyAddress","companyCity","companyCounty","companyZip","incorpList","nextStep","setState","prevStep","increasePercentage","decreasePercentage","prevState","handleChange","input","event","target","value","handleIncorpChange","e","dataset","id","className","console","log","addIncorp","preventDefault","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport FormationIntro from './FormationIntro.jsx';\nimport FormationInfo from './FormationInfo.jsx';\n\nimport FormationPDF from './FormationPDF.jsx';\n\nimport { Alert } from 'react-alert'\n\n\nexport default class FormationQuestions extends Component {\n  state = {\n    step: 1,\n    percent: 50,\n    date: new Date(),\n    companyName: '[X]',\n    name: '[X]',\n    address: '[X]',\n    phone: '[X]',\n    fax: '[X]',\n    companyAddress: '[X]',\n    companyCity: '[X]',\n    companyCounty: '[X]',\n    companyZip: '[X]',\n    incorpList: [{ name: \"\" }]\n  }\n\n  nextStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step + 1\n    })\n  }\n\n  prevStep = () => {\n    const { step } = this.state\n    this.setState({\n      step: step - 1\n    })\n  }\n\n  increasePercentage = () => {\n    // this.setState((prevState) => ({\n    //   percent: prevState.percent >= 100 ? 0 : prevState.percent + 25,\n    // }))\n    const { percent } = this.state\n    this.setState({\n      percent: percent + 25\n    })\n  }\n\n\n  decreasePercentage = () => {\n    this.setState((prevState) => ({\n      percent: prevState.percent >= 100 ? 0 : prevState.percent - 25,\n    }))\n  }\n\n\n  handleChange = input => event => {\n    this.setState({ [input]: event.target.value })\n  }\n\n  handleIncorpChange = (e) => {\n    let incorpList = [...this.state.incorpList]\n    incorpList[e.target.dataset.id][e.target.className] = e.target.value\n    this.setState({ incorpList }, () => console.log(this.state.incorpList))\n  }\n\n  addIncorp = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      incorpList: [...prevState.incorpList, { name: \"\" }],\n    }));\n  }\n\n  render() {\n    const { step } = this.state;\n    const {\n      percent,\n      date,\n      companyName,\n      name,\n      address,\n      phone,\n      fax,\n      companyAddress,\n      companyCity,\n      companyCounty,\n      companyZip,\n      incorpList\n    } = this.state;\n    const values = {\n      percent,\n      date,\n      companyName,\n      name,\n      address,\n      phone,\n      fax,\n      companyAddress,\n      companyCity,\n      companyCounty,\n      companyZip,\n      incorpList\n    };\n\n    switch (step) {\n      case 1:\n        return <FormationIntro\n          nextStep={this.nextStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        // doc={EmploymentDocument}\n        />\n      case 2:\n        return <FormationInfo\n          nextStep={this.nextStep}\n          prevStep={this.prevStep}\n          handleChange={this.handleChange}\n          increasePercentage={this.increasePercentage}\n          decreasePercentage={this.decreasePercentage}\n          values={values}\n        // doc={EmploymentDocument}\n        />\n      case 3:\n        return <FormationPDF\n          prevStep={this.prevStep}\n          values={values} />\n    }\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}