{"ast":null,"code":"var _jsxFileName = \"/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/frontend/src/AutomateGovernance.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport './App.css';\nimport Navbar from './components/nav-bar.jsx';\nimport Footer from './components/footer.jsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { DropzoneDialog, DropzoneArea } from 'material-ui-dropzone';\nimport ModalTest from './components/modal.jsx';\nimport Button from '@material-ui/core/Button';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n/* FOR PARTNERSHIP QUESTIONS */\n\nconst booleans = [{\n  value: 'Yes',\n  label: 'Yes'\n}, {\n  value: 'No',\n  label: 'No'\n}];\nconst automation = [{\n  value: 'AI',\n  label: 'AI Automation'\n}, {\n  value: 'Manual',\n  label: 'Manually Input'\n}];\nconst companies = [{\n  value: 'Corporation',\n  label: 'Corporation'\n}, {\n  value: 'LLC',\n  label: 'LLC'\n}, {\n  value: 'Parternship',\n  label: 'Partnership'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function AutomateGov() {\n  const classes = useStyles();\n  const [company, setCompany] = React.useState();\n  const [USstate, setState] = React.useState();\n  const [boolean, setBoolean] = React.useState();\n  const [membersList, setMembersList] = React.useState([{\n    name: \"\",\n    email: \"\",\n    percentShares: \"\",\n    percentProfit: \"\",\n    percentLosses: \"\"\n  }]);\n  const [automate, setAutomation] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [files, setFiles] = React.useState([]);\n  const [state, setStates] = React.useState({\n    vote: 0,\n    partners: 0,\n    email: localStorage.getItem('email'),\n    plan: localStorage.getItem('plan')\n  });\n\n  const handleStateChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setStates(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    const data = {\n      vote: state.vote,\n      boolean: boolean,\n      partners: state.partners,\n      membersList: membersList,\n      email: state.email\n    };\n    fetch('/addPartnershipGovernance', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).catch(error => console.error('Error:', error)).then(response => console.log('Success:', response));\n\n    if (state.plan === 'Premium') {\n      document.location = \"/DashboardPremium\";\n    } else {\n      document.location = \"/Dashboard\";\n    }\n  };\n\n  const handleClose = event => {\n    setOpen(false);\n  };\n\n  function handleChange(files) {\n    setFiles(files);\n  }\n\n  const handleOpen = event => {\n    setOpen(true);\n  };\n\n  const handleChangeAutomation = event => {\n    setAutomation(event.target.value);\n  };\n\n  const handleChangeBoolean = event => {\n    setBoolean(event.target.value);\n  };\n\n  const handleChangeCompany = event => {\n    setCompany(event.target.value);\n  };\n\n  const handleChangeState = event => {\n    setState(event.target.value);\n  };\n\n  const handleMembersChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...membersList];\n    list[index][name] = value;\n    setMembersList(list);\n  };\n\n  const handleAddMembers = () => {\n    setMembersList([...membersList, {\n      name: \"\",\n      email: \"\",\n      percentShares: \"\",\n      percentProfit: \"\",\n      percentLosses: \"\"\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"full-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"company-id-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"#245CA6\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \" Automate Governance \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: 50,\n    width: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"line\", {\n    class: \"svg-line-1\",\n    x1: 1,\n    x2: 500,\n    y1: 1,\n    y2: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \" Welcome! \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"login-form\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"partnership-questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"upload-formation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  }, \" Please upload formation documents \"), /*#__PURE__*/React.createElement(DropzoneArea, {\n    onChange: handleChange.bind(this),\n    filesLimit: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"upload-governance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, \" Please upload governance documents \"), /*#__PURE__*/React.createElement(DropzoneArea, {\n    onChange: handleChange.bind(this),\n    filesLimit: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"upload-company-minutes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  }, \" Please upload company's form of resolutions and meeting minutes (if any) \"), /*#__PURE__*/React.createElement(DropzoneArea, {\n    onChange: handleChange.bind(this),\n    filesLimit: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"unanimous-choice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-consent\",\n    select: true,\n    label: \"Does your partnership require unanimous consent?\",\n    value: boolean,\n    onChange: handleChangeBoolean,\n    variant: \"outlined\",\n    style: {\n      width: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 33\n    }\n  }, booleans.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 41\n    }\n  }, option.label)))), boolean === 'No' && /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"vote-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-number\",\n    label: \"What is a sufficient vote to take partnership action?\",\n    name: \"vote\",\n    onChange: handleStateChange,\n    type: \"number\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    style: {\n      width: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"num-partners\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-number\",\n    label: \"How many partners does your business have?\",\n    name: \"partners\",\n    onChange: handleStateChange,\n    type: \"number\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    style: {\n      width: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 29\n    }\n  }, \" Please enter the following information for all Members or Managers \"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"members-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"button-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddMembers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 37\n    }\n  }, \" Add Member\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 33\n    }\n  }), membersList.map((x, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"members-form-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"name-input-p\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"name\",\n      label: \"Name\",\n      value: x.name,\n      variant: \"outlined\",\n      style: {\n        width: \"200px\"\n      },\n      onChange: e => handleMembersChange(e, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"email-input-p\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"email\",\n      label: \"Email\",\n      value: x.email,\n      variant: \"outlined\",\n      onChange: e => handleMembersChange(e, i),\n      style: {\n        width: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"percent-ownership\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"percentShares\",\n      label: \"Percentage of ownership\",\n      type: \"number\",\n      value: x.percentShares,\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\",\n      onChange: e => handleMembersChange(e, i),\n      style: {\n        width: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"percent-profits-received\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"percentProfit\",\n      label: \"Percent of profits received\",\n      type: \"number\",\n      value: x.percentProfit,\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: e => handleMembersChange(e, i),\n      variant: \"outlined\",\n      style: {\n        width: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"percent-losses-received\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"percentLosses\",\n      label: \"Percent of losses received\",\n      type: \"number\",\n      value: x.percentLosses,\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: e => handleMembersChange(e, i),\n      variant: \"outlined\",\n      style: {\n        width: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 49\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"gov-button-1\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 37\n    }\n  }, \" Finish Initializing Your Company \")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/avaniaggrwal/Documents/smbusinesslegal.com/smblegal/frontend/src/AutomateGovernance.jsx"],"names":["React","Component","Fragment","Navbar","Footer","makeStyles","TextField","MenuItem","DropzoneDialog","DropzoneArea","ModalTest","Button","BrowserRouter","Router","Switch","Route","Link","booleans","value","label","automation","companies","useStyles","theme","root","margin","spacing","width","AutomateGov","classes","company","setCompany","useState","USstate","setState","boolean","setBoolean","membersList","setMembersList","name","email","percentShares","percentProfit","percentLosses","automate","setAutomation","open","setOpen","files","setFiles","state","setStates","vote","partners","localStorage","getItem","plan","handleStateChange","e","target","prevState","handleClick","event","preventDefault","data","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","console","response","log","document","location","handleClose","handleChange","handleOpen","handleChangeAutomation","handleChangeBoolean","handleChangeCompany","handleChangeState","handleMembersChange","index","list","handleAddMembers","color","textAlign","bind","map","option","shrink","x","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,sBAA7C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,QAKO,kBALP;AAUA;;AAEA,MAAMC,QAAQ,GAAG,CACb;AACIC,EAAAA,KAAK,EAAE,KADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADa,EAKb;AACID,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALa,CAAjB;AAYA,MAAMC,UAAU,GAAG,CACf;AACIF,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADe,EAKf;AACID,EAAAA,KAAK,EAAE,QADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALe,CAAnB;AAWA,MAAME,SAAS,GAAG,CACd;AACIH,EAAAA,KAAK,EAAE,aADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADc,EAKd;AACID,EAAAA,KAAK,EAAE,KADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALc,EASd;AACID,EAAAA,KAAK,EAAE,aADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATc,CAAlB;AAgBA,MAAMG,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,4BAAwB;AACpBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADY;AAEpBC,MAAAA,KAAK,EAAE;AAFa;AADtB;AAD+B,CAAZ,CAAD,CAA5B;AAaA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwB/B,KAAK,CAACgC,QAAN,EAA9B;AACA,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBlC,KAAK,CAACgC,QAAN,EAA5B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBpC,KAAK,CAACgC,QAAN,EAA9B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCtC,KAAK,CAACgC,QAAN,CAAe,CAAC;AAAEO,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,aAAa,EAAE,EAAtC;AAA0CC,IAAAA,aAAa,EAAE,EAAzD;AAA6DC,IAAAA,aAAa,EAAE;AAA5E,GAAD,CAAf,CAAtC;AACA,QAAM,CAACC,QAAD,EAAWC,aAAX,IAA4B7C,KAAK,CAACgC,QAAN,EAAlC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkB/C,KAAK,CAACgC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjD,KAAK,CAACgC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACkB,KAAD,EAAQC,SAAR,IAAqBnD,KAAK,CAACgC,QAAN,CAAe;AACtCoB,IAAAA,IAAI,EAAE,CADgC;AAEtCC,IAAAA,QAAQ,EAAE,CAF4B;AAGtCb,IAAAA,KAAK,EAAEc,YAAY,CAACC,OAAb,CAAqB,OAArB,CAH+B;AAItCC,IAAAA,IAAI,EAAEF,YAAY,CAACC,OAAb,CAAqB,MAArB;AAJgC,GAAf,CAA3B;;AAQA,QAAME,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAAEnB,MAAAA,IAAF;AAAQrB,MAAAA;AAAR,QAAkBwC,CAAC,CAACC,MAA1B;AACAR,IAAAA,SAAS,CAACS,SAAS,KAAK,EACpB,GAAGA,SADiB;AAEpB,OAACrB,IAAD,GAAQrB;AAFY,KAAL,CAAV,CAAT;AAIH,GAND;;AAQA,QAAM2C,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAG;AACTZ,MAAAA,IAAI,EAAEF,KAAK,CAACE,IADH;AAETjB,MAAAA,OAAO,EAAEA,OAFA;AAGTkB,MAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHP;AAIThB,MAAAA,WAAW,EAAEA,WAJJ;AAKTG,MAAAA,KAAK,EAAEU,KAAK,CAACV;AALJ,KAAb;AAOAyB,IAAAA,KAAK,CAAC,2BAAD,EAA8B;AAC/BC,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFyB;AAEH;AAC5BM,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHsB,KAA9B,CAAL,CAMKC,IANL,CAMUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANjB,EAOKC,KAPL,CAOWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAPpB,EAQKJ,IARL,CAQUM,QAAQ,IAAID,OAAO,CAACE,GAAR,CAAY,UAAZ,EAAwBD,QAAxB,CARtB;;AAUA,QAAI3B,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AAC1BuB,MAAAA,QAAQ,CAACC,QAAT,GAAoB,mBAApB;AACH,KAFD,MAGK;AACDD,MAAAA,QAAQ,CAACC,QAAT,GAAoB,YAApB;AACH;AAIJ,GA7BD;;AAgCA,QAAMC,WAAW,GAAInB,KAAD,IAAW;AAC3Bf,IAAAA,OAAO,CAAC,KAAD,CAAP;AAEH,GAHD;;AAKA,WAASmC,YAAT,CAAsBlC,KAAtB,EAA6B;AACzBC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;;AAED,QAAMmC,UAAU,GAAIrB,KAAD,IAAW;AAC1Bf,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMqC,sBAAsB,GAAItB,KAAD,IAAW;AACtCjB,IAAAA,aAAa,CAACiB,KAAK,CAACH,MAAN,CAAazC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMmE,mBAAmB,GAAIvB,KAAD,IAAW;AACnC1B,IAAAA,UAAU,CAAC0B,KAAK,CAACH,MAAN,CAAazC,KAAd,CAAV;AACH,GAFD;;AAIA,QAAMoE,mBAAmB,GAAIxB,KAAD,IAAW;AACnC/B,IAAAA,UAAU,CAAC+B,KAAK,CAACH,MAAN,CAAazC,KAAd,CAAV;AACH,GAFD;;AAIA,QAAMqE,iBAAiB,GAAIzB,KAAD,IAAW;AACjC5B,IAAAA,QAAQ,CAAC4B,KAAK,CAACH,MAAN,CAAazC,KAAd,CAAR;AACH,GAFD;;AAIA,QAAMsE,mBAAmB,GAAG,CAAC9B,CAAD,EAAI+B,KAAJ,KAAc;AACtC,UAAM;AAAElD,MAAAA,IAAF;AAAQrB,MAAAA;AAAR,QAAkBwC,CAAC,CAACC,MAA1B;AACA,UAAM+B,IAAI,GAAG,CAAC,GAAGrD,WAAJ,CAAb;AACAqD,IAAAA,IAAI,CAACD,KAAD,CAAJ,CAAYlD,IAAZ,IAAoBrB,KAApB;AACAoB,IAAAA,cAAc,CAACoD,IAAD,CAAd;AACH,GALD;;AAOA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BrD,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB;AAAEE,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,aAAa,EAAE,EAAtC;AAA0CC,MAAAA,aAAa,EAAE,EAAzD;AAA6DC,MAAAA,aAAa,EAAE;AAA5E,KAAjB,CAAD,CAAd;AACH,GAFD;;AAMA,sBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI;AAAI,IAAA,KAAK,EAAE;AAAEiD,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,MAAM,EAAE,EAAb;AAAiB,IAAA,KAAK,EAAE,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAE,GAApC;AAAyC,IAAA,EAAE,EAAE,CAA7C;AAAgD,IAAA,EAAE,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAVJ,eAeI;AAAG,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,eAiBI;AAAM,IAAA,SAAS,EAAEhE,OAAO,CAACL,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAwB,IAAA,KAAK,EAAE;AAAEqE,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,uBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eA0GI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,eAGI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAEX,YAAY,CAACY,IAAb,CAAkB,IAAlB,CADd;AAEI,IAAA,UAAU,EAAE,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAeI;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,eAGI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAEX,YAAY,CAACY,IAAb,CAAkB,IAAlB,CADd;AAEI,IAAA,UAAU,EAAE,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAfJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,eA4BI;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFADJ,eAGI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAEX,YAAY,CAACY,IAAb,CAAkB,IAAlB,CADd;AAEI,IAAA,UAAU,EAAE,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CA5BJ,eAuCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,eAwCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCJ,eAyCI;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,yBADP;AAEI,IAAA,MAAM,MAFV;AAEW,IAAA,KAAK,EAAC,kDAFjB;AAGI,IAAA,KAAK,EAAE3D,OAHX;AAII,IAAA,QAAQ,EAAEkD,mBAJd;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,KAAK,EAAE;AAAE1D,MAAAA,KAAK,EAAE;AAAT,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKV,QAAQ,CAAC8E,GAAT,CAAcC,MAAD,iBACV,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,MAAM,CAAC9E,KAAtB;AAA6B,IAAA,KAAK,EAAE8E,MAAM,CAAC9E,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK8E,MAAM,CAAC7E,KADZ,CADH,CARL,CADJ,CAzCJ,EA4DKgB,OAAO,KAAK,IAAZ,iBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,iBADP;AAEI,IAAA,KAAK,EAAC,uDAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAGgB,IAAA,QAAQ,EAAEsB,iBAH1B;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,eAAe,EAAE;AACbwC,MAAAA,MAAM,EAAE;AADK,KALrB;AAQI,IAAA,OAAO,EAAC,UARZ;AASI,IAAA,KAAK,EAAE;AAAEtE,MAAAA,KAAK,EAAE;AAAT,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CA9DR,eAmFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnFJ,eAoFI;AAAK,IAAA,KAAK,EAAC,cAAX;AAA0B,IAAA,KAAK,EAAE;AAAEkE,MAAAA,SAAS,EAAE;AAAb,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,iBADP;AAEI,IAAA,KAAK,EAAC,4CAFV;AAGI,IAAA,IAAI,EAAC,UAHT;AAGoB,IAAA,QAAQ,EAAEpC,iBAH9B;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,eAAe,EAAE;AACbwC,MAAAA,MAAM,EAAE;AADK,KALrB;AAQI,IAAA,OAAO,EAAC,UARZ;AASI,IAAA,KAAK,EAAE;AAAEtE,MAAAA,KAAK,EAAE;AAAT,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApFJ,eAiGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjGJ,eAmGI;AAAG,IAAA,KAAK,EAAE;AAAEkE,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAnGJ,eAqGI;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAQKtD,WAAW,CAAC0D,GAAZ,CAAgB,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACvB,wBACI;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,KAAK,EAAC,cAAX;AAA0B,MAAA,KAAK,EAAE;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAC,MAFV;AAGI,MAAA,KAAK,EAAEK,CAAC,CAAC3D,IAHb;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,KAAK,EAAE;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OALX;AAMI,MAAA,QAAQ,EAAE+B,CAAC,IAAI8B,mBAAmB,CAAC9B,CAAD,EAAIyC,CAAJ,CANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,eAeI;AAAK,MAAA,KAAK,EAAC,eAAX;AAA2B,MAAA,KAAK,EAAE;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,KAAK,EAAEK,CAAC,CAAC1D,KAHb;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,QAAQ,EAAEkB,CAAC,IAAI8B,mBAAmB,CAAC9B,CAAD,EAAIyC,CAAJ,CALtC;AAMI,MAAA,KAAK,EAAE;AAAExE,QAAAA,KAAK,EAAE;AAAT,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,eA0BI;AAAK,MAAA,KAAK,EAAC,mBAAX;AAA+B,MAAA,KAAK,EAAE;AAAEkE,QAAAA,SAAS,EAAE;AAAb,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,eADT;AAEI,MAAA,KAAK,EAAC,yBAFV;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,KAAK,EAAEK,CAAC,CAACzD,aAJb;AAKI,MAAA,eAAe,EAAE;AACbwD,QAAAA,MAAM,EAAE;AADK,OALrB;AAQI,MAAA,OAAO,EAAC,UARZ;AASI,MAAA,QAAQ,EAAEvC,CAAC,IAAI8B,mBAAmB,CAAC9B,CAAD,EAAIyC,CAAJ,CATtC;AAUI,MAAA,KAAK,EAAE;AAAExE,QAAAA,KAAK,EAAE;AAAT,OAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA1BJ,eAwCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCJ,eAyCI;AAAK,MAAA,KAAK,EAAC,0BAAX;AAAsC,MAAA,KAAK,EAAE;AAAEkE,QAAAA,SAAS,EAAE;AAAb,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,eADT;AAEI,MAAA,KAAK,EAAC,6BAFV;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,KAAK,EAAEK,CAAC,CAACxD,aAJb;AAKI,MAAA,eAAe,EAAE;AACbuD,QAAAA,MAAM,EAAE;AADK,OALrB;AAQI,MAAA,QAAQ,EAAEvC,CAAC,IAAI8B,mBAAmB,CAAC9B,CAAD,EAAIyC,CAAJ,CARtC;AAUI,MAAA,OAAO,EAAC,UAVZ;AAWI,MAAA,KAAK,EAAE;AAAExE,QAAAA,KAAK,EAAE;AAAT,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAzCJ,eAwDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxDJ,eA0DI;AAAK,MAAA,KAAK,EAAC,yBAAX;AAAqC,MAAA,KAAK,EAAE;AAAEkE,QAAAA,SAAS,EAAE;AAAb,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,eADT;AAEI,MAAA,KAAK,EAAC,4BAFV;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,KAAK,EAAEK,CAAC,CAACvD,aAJb;AAKI,MAAA,eAAe,EAAE;AACbsD,QAAAA,MAAM,EAAE;AADK,OALrB;AAQI,MAAA,QAAQ,EAAEvC,CAAC,IAAI8B,mBAAmB,CAAC9B,CAAD,EAAIyC,CAAJ,CARtC;AAUI,MAAA,OAAO,EAAC,UAVZ;AAWI,MAAA,KAAK,EAAE;AAAExE,QAAAA,KAAK,EAAE;AAAT,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA1DJ,CADJ;AA6EH,GA9EA,CARL,CArGJ,eAuMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvMJ,eA8PI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9PJ,eA+PI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/PJ,eAgQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhQJ,eAiQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,KAAK,EAAC,cAAX;AAA0B,IAAA,OAAO,EAAEkC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAE;AAAEgC,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,CAFJ,CAjQJ,CA1GJ,eAwXI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxXJ,eAyXI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzXJ,eA0XI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1XJ,CADJ,CAjBJ,CADJ,eAmZI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnZJ,CADJ;AAyZH","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport Navbar from './components/nav-bar.jsx';\nimport Footer from './components/footer.jsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { DropzoneDialog, DropzoneArea } from 'material-ui-dropzone';\nimport ModalTest from './components/modal.jsx';\nimport Button from '@material-ui/core/Button';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n\n\n\n/* FOR PARTNERSHIP QUESTIONS */\n\nconst booleans = [\n    {\n        value: 'Yes',\n        label: 'Yes',\n    },\n    {\n        value: 'No',\n        label: 'No',\n    }\n]\n\n\nconst automation = [\n    {\n        value: 'AI',\n        label: 'AI Automation',\n    },\n    {\n        value: 'Manual',\n        label: 'Manually Input',\n    }\n]\n\nconst companies = [\n    {\n        value: 'Corporation',\n        label: 'Corporation',\n    },\n    {\n        value: 'LLC',\n        label: 'LLC',\n    },\n    {\n        value: 'Parternship',\n        label: 'Partnership',\n    },\n];\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\n\n\n\n\nexport default function AutomateGov() {\n    const classes = useStyles();\n    const [company, setCompany] = React.useState();\n    const [USstate, setState] = React.useState();\n    const [boolean, setBoolean] = React.useState();\n    const [membersList, setMembersList] = React.useState([{ name: \"\", email: \"\", percentShares: \"\", percentProfit: \"\", percentLosses: \"\" }]);\n    const [automate, setAutomation] = React.useState();\n    const [open, setOpen] = React.useState(false);\n    const [files, setFiles] = React.useState([]);\n    const [state, setStates] = React.useState({\n        vote: 0,\n        partners: 0,\n        email: localStorage.getItem('email'),\n        plan: localStorage.getItem('plan')\n    })\n\n\n    const handleStateChange = e => {\n        const { name, value } = e.target\n        setStates(prevState => ({\n            ...prevState,\n            [name]: value\n        }))\n    }\n\n    const handleClick = (event) => {\n        event.preventDefault();\n\n        const data = {\n            vote: state.vote,\n            boolean: boolean,\n            partners: state.partners,\n            membersList: membersList,\n            email: state.email\n        }\n        fetch('/addPartnershipGovernance', {\n            method: 'POST',\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers: { 'Content-Type': 'application/json' }\n        })\n\n            .then(res => res.json())\n            .catch(error => console.error('Error:', error))\n            .then(response => console.log('Success:', response));\n\n        if (state.plan === 'Premium') {\n            document.location = \"/DashboardPremium\"\n        }\n        else {\n            document.location = \"/Dashboard\"\n        }\n\n\n\n    }\n\n\n    const handleClose = (event) => {\n        setOpen(false);\n\n    }\n\n    function handleChange(files) {\n        setFiles(files);\n    }\n\n    const handleOpen = (event) => {\n        setOpen(true);\n    }\n\n    const handleChangeAutomation = (event) => {\n        setAutomation(event.target.value);\n    }\n\n    const handleChangeBoolean = (event) => {\n        setBoolean(event.target.value);\n    }\n\n    const handleChangeCompany = (event) => {\n        setCompany(event.target.value);\n    };\n\n    const handleChangeState = (event) => {\n        setState(event.target.value);\n    };\n\n    const handleMembersChange = (e, index) => {\n        const { name, value } = e.target;\n        const list = [...membersList]\n        list[index][name] = value;\n        setMembersList(list)\n    }\n\n    const handleAddMembers = () => {\n        setMembersList([...membersList, { name: \"\", email: \"\", percentShares: \"\", percentProfit: \"\", percentLosses: \"\" }]);\n    }\n\n\n\n    return (\n        <div class=\"full-page\">\n            <div class=\"company-id-page\">\n                <Navbar />\n\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <h1 style={{ color: \"#245CA6\" }}> Automate Governance </h1>\n                <br></br>\n                <div style={{ textAlign: \"center\" }}>\n                    <svg height={50} width={500}>\n                        <line class=\"svg-line-1\" x1={1} x2={500} y1={1} y2={1} />\n                    </svg>\n                </div>\n                <p style={{ textAlign: \"center\" }}> Welcome! </p>\n                <br></br>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <div class=\"login-form\" style={{ textAlign: \"center\" }}>\n                        <div class=\"partnership-questions\">\n\n\n\n                            {/* <div class=\"automate-choice\">\n                                <TextField\n                                    id=\"outlined-select-consent\"\n                                    select label=\"How would you like to Automate your Governance?\"\n                                    value={automate}\n                                    onChange={handleChangeAutomation}\n                                    variant=\"outlined\"\n                                    style={{ width: \"500px\" }}\n                                >\n                                    {automation.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                                < br />\n                            </div> */}\n\n\n\n                            {/* {automate === 'AI' && (\n                                <form>\n                                    <br />\n                                    <div class=\"upload-formation\">\n                                        <p style={{ textAlign: \"center\" }}> Please upload formation documents </p>\n\n                                        <DropzoneArea\n                                            onChange={handleChange.bind(this)}\n                                            filesLimit={10}\n                                        />\n\n                                    </div>\n\n                                    <br />\n                                    <br />\n\n                                    <div class=\"upload-governance\">\n                                        <p style={{ textAlign: \"center\" }}> Please upload governance documents </p>\n\n                                        <DropzoneArea\n                                            onChange={handleChange.bind(this)}\n                                            filesLimit={10}\n                                        />\n\n                                    </div>\n                                    <br />\n                                    <br />\n\n\n                                    <div class=\"upload-company-minutes\">\n                                        <p style={{ textAlign: \"center\" }}> Please upload company's form of resolutions and meeting minutes (if any) </p>\n\n                                        <DropzoneArea\n                                            onChange={handleChange.bind(this)}\n                                            filesLimit={10}\n                                        />\n\n                                    </div>\n\n                                    <br />\n                                    < br />\n                                    {state.plan === 'Premium' && (\n\n                                        <center>\n                                            <Link to=\"/DashboardPremium\">\n                                                <div class=\"gov-button-1\" >\n                                                    <p style={{ textAlign: \"center\" }}> Finish Initializing Your Company </p>\n                                                </div>\n                                            </Link>\n                                        </center>\n                                    )}\n\n                                    {state.plan != 'Premium' && (\n\n                                        <center>\n                                            <Link to=\"/Dashboard\">\n                                                <div class=\"gov-button-1\" >\n                                                    <p style={{ textAlign: \"center\" }}> Finish Initializing Your Company </p>\n                                                </div>\n                                            </Link>\n                                        </center>\n                                    )}\n\n\n                                </form>\n\n\n                            )}\n\n\n\n\n\n                            <br />\n                            <br /> */}\n\n                        </div>\n\n\n                        {/* {automate === 'Manual' && ( */}\n\n                        <form>\n\n                            <div class=\"upload-formation\">\n                                <p style={{ textAlign: \"center\" }}> Please upload formation documents </p>\n\n                                <DropzoneArea\n                                    onChange={handleChange.bind(this)}\n                                    filesLimit={10}\n                                />\n\n                            </div>\n\n                            <br />\n                            <br />\n\n                            <div class=\"upload-governance\">\n                                <p style={{ textAlign: \"center\" }}> Please upload governance documents </p>\n\n                                <DropzoneArea\n                                    onChange={handleChange.bind(this)}\n                                    filesLimit={10}\n                                />\n\n                            </div>\n                            <br />\n                            <br />\n\n\n                            <div class=\"upload-company-minutes\">\n                                <p style={{ textAlign: \"center\" }}> Please upload company's form of resolutions and meeting minutes (if any) </p>\n\n                                <DropzoneArea\n                                    onChange={handleChange.bind(this)}\n                                    filesLimit={10}\n                                />\n\n                            </div>\n\n\n                            <br />\n                            < br />\n                            <div class=\"unanimous-choice\">\n                                <TextField\n                                    id=\"outlined-select-consent\"\n                                    select label=\"Does your partnership require unanimous consent?\"\n                                    value={boolean}\n                                    onChange={handleChangeBoolean}\n                                    variant=\"outlined\"\n                                    style={{ width: \"500px\" }}\n                                >\n                                    {booleans.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </div>\n\n\n\n                            {boolean === 'No' && (\n\n                                <form>\n                                    <br />\n                                    <div class=\"vote-action\">\n                                        <TextField\n                                            id=\"outlined-number\"\n                                            label=\"What is a sufficient vote to take partnership action?\"\n                                            name=\"vote\" onChange={handleStateChange}\n                                            type=\"number\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            style={{ width: \"500px\" }}\n                                        />\n\n                                    </div>\n                                </form>\n\n                            )}\n\n\n                            <br></br>\n                            <div class=\"num-partners\" style={{ textAlign: \"center\" }}>\n                                <TextField\n                                    id=\"outlined-number\"\n                                    label=\"How many partners does your business have?\"\n                                    name=\"partners\" onChange={handleStateChange}\n                                    type=\"number\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    style={{ width: \"500px\" }}\n                                />\n                            </div>\n                            <br></br>\n\n                            <p style={{ textAlign: \"center\" }}> Please enter the following information for all Members or Managers </p>\n\n                            <div class=\"members-form\">\n\n                                <div class=\"button-add\">\n                                    <Button onClick={handleAddMembers}> Add Member</Button>\n                                </div>\n                                < br />\n                                <br />\n\n                                {membersList.map((x, i) => {\n                                    return (\n                                        <div class=\"members-form-box\">\n\n                                            <div class=\"name-input-p\" style={{ textAlign: \"center\" }}>\n\n                                                <TextField\n                                                    name=\"name\"\n                                                    label=\"Name\"\n                                                    value={x.name}\n                                                    variant=\"outlined\"\n                                                    style={{ width: \"200px\" }}\n                                                    onChange={e => handleMembersChange(e, i)}\n                                                />\n\n                                            </div>\n                                            < br />\n                                            <div class=\"email-input-p\" style={{ textAlign: \"center\" }}>\n                                                <TextField\n                                                    name=\"email\"\n                                                    label=\"Email\"\n                                                    value={x.email}\n                                                    variant=\"outlined\"\n                                                    onChange={e => handleMembersChange(e, i)}\n                                                    style={{ width: \"200px\" }}\n                                                />\n                                            </div>\n                                            <br />\n                                            <div class=\"percent-ownership\" style={{ textAlign: \"center\" }}>\n                                                <TextField\n                                                    name=\"percentShares\"\n                                                    label=\"Percentage of ownership\"\n                                                    type=\"number\"\n                                                    value={x.percentShares}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    variant=\"outlined\"\n                                                    onChange={e => handleMembersChange(e, i)}\n                                                    style={{ width: \"200px\" }}\n                                                />\n                                            </div>\n                                            <br />\n                                            <div class=\"percent-profits-received\" style={{ textAlign: \"center\" }}>\n                                                <TextField\n                                                    name=\"percentProfit\"\n                                                    label=\"Percent of profits received\"\n                                                    type=\"number\"\n                                                    value={x.percentProfit}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    onChange={e => handleMembersChange(e, i)}\n\n                                                    variant=\"outlined\"\n                                                    style={{ width: \"200px\" }}\n                                                />\n                                            </div>\n                                            < br />\n\n                                            <div class=\"percent-losses-received\" style={{ textAlign: \"center\" }}>\n                                                <TextField\n                                                    name=\"percentLosses\"\n                                                    label=\"Percent of losses received\"\n                                                    type=\"number\"\n                                                    value={x.percentLosses}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    onChange={e => handleMembersChange(e, i)}\n\n                                                    variant=\"outlined\"\n                                                    style={{ width: \"200px\" }}\n                                                />\n                                            </div>\n                                        </div>\n\n                                    );\n                                })}\n\n\n\n\n\n\n                            </div>\n\n\n\n\n                            <br></br>\n\n\n                            {/*}\n\n             <p style={{textAlign: \"center\"}}> Please upload formation documents </p>\n            \n             <TextField\n             name=\"upload-file\"\n             type=\"file\"\n             variant=\"outlined\"\n             helperText=\"upload\"\n              />\n              <br />\n              <br />\n\n            <p style={{textAlign: \"center\"}}> Please upload governance documents </p>\n            \n            <TextField\n            name=\"upload-file\"\n            type=\"file\"\n            variant=\"outlined\"\n            helperText=\"upload\"\n             />\n\n            < br/> \n            < br/> \n\n            <p style={{textAlign: \"center\"}}> Please upload company's form of resolution and meeting minutes </p>\n            \n            <TextField\n            name=\"upload-file\"\n            type=\"file\"\n            variant=\"outlined\"\n            helperText=\"upload\"\n             />\n\n            {/*   <div class=\"upload\">\n                    <Button onClick={handleOpen}>\n                  Add Image\n                </Button>\n                <DropzoneDialog\n                    open={open}\n              /*      onSave={handleSave(this)} \n                    acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                    showPreviews={true}\n                    maxFileSize={5000000}\n                    onClose={handleClose}\n                />\n                </div>\n                        */}\n\n\n\n\n                            <br />\n                            <br />\n                            <br />\n                            <center>\n                                {/* <Link to=\"/Dashboard\"> */}\n                                <div class=\"gov-button-1\" onClick={handleClick}>\n                                    <p style={{ textAlign: \"center\" }}> Finish Initializing Your Company </p>\n                                </div>\n                                {/* </Link> */}\n                            </center>\n\n                        </form>\n\n                        {/* )} */}\n\n\n                        <br></br>\n                        <br></br>\n                        <br></br>\n\n                    </div>\n                </form>\n            </div>\n\n            <Footer />\n\n\n        </div>\n    );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}